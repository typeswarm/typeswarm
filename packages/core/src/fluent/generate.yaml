- className: BaseFluentPort
  dto:
      className: StrictPortMapping
      module: '../../normalize'
  methods:
      set:
          target: { data.target: number }
          as: { data.published: number }
      flag:
          udp: { data.protocol: udp }
          tcp: { data.protocol: tcp }
          host: { data.mode: host }
          ingress: { data.mode: ingress }

- className: BaseFluentNetwork
  imports:
      '{ DefinitionsNetwork }': '../../compose-spec'
  dto:
      className: NetworkRegistration
      definition: |
          {
             name?: string;
             network: DefinitionsNetwork;
          }
  methods:
      set:
          driver: { data.network.driver: string }
          driverOpts:
              { data.network.driver_opts: 'Record<string, string | number>' }
          externalName: { data.network.external.name: string }
      flag:
          isExternal: { data.network.external: true }
          internal: { data.network.internal: true }
          enableIPv6: { data.network.enable_ipv6: true }
          attachable: { data.network.attachable: true }
      dict:
          label: { data.network.labels: string }
